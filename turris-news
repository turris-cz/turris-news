#!/bin/sh
set -e

URL_BASE="https://repo.turris.cz/news"
URL_STAGING="https://repo.turris.cz/news-staging"
LOCAL_STORE="/tmp/turris-news"
RINDEX="$LOCAL_STORE/index"


print_help() {
	echo "Usage: turris-news [OPTION].. OPERATION [ARG].."
	echo "Turris news fetcher."
	echo
	echo "Operations:"
	echo "  update"
	echo "    Pull index of news from server."
	echo "  channels"
	echo "    List available news channels."
	echo "  list [ARG].."
	echo "    List available news in given channel."
	echo "  read [ARG].."
	echo "    Print selected messages or all nessages."
	echo "  cron"
	echo "    Update news index and generate notifications for new ones."
	echo "    This operation is intended to be only called from cron."
	echo "Pass --help option after operation to get more help."
	echo
	echo "Options:"
	echo "  --help, -h"
	echo "    Print this help text."
	echo "  --lang LANG"
	echo "    Allows you to specify requested news language."
	echo "  --staging"
	echo "    Instead of default URL use staging one."
	echo "    Staging contains not yet released messages."
	echo "  --url URL"
	echo "    Change URL used for getting news."
	echo "    This can't be mixed with --staging option."
}


sha256() {
	sha256sum "$1" |  cut -d " " -f 1
}

# Get some column from index from primary line (not starting with :)
# First argument has to be index path. Second argument is first column content and
# third one should be requested column number.
index_prim_col() {
	awk -F : "/^$2:/{ print \$$3 }" "$1"
}


# Utility function of index_update that downloads channel index.
_subindex_update() {
	echo "Updating '$1' channel index.." >&2
	local INDX="$LOCAL_STORE/$1.index.gz"
	curl "$URL/$1.index.gz" > "$INDX"
	if [ "$(sha256 "$INDX")" != "$(index_prim_col "$RINDEX" "$1" 2)" ]; then
		echo "Index hash does not match root index." >&2
		return 1
	fi
	rm -f "$LOCAL_STORE/$1.index"
	gunzip "$INDX"
}

# Update indexes in local store.
# Allowed channels can be provided as arguments.
index_update() {
	mkdir -p "$LOCAL_STORE"
	# Download root index
	echo "Updating root index.." >&2
	curl "$URL/index.gz" | gunzip > "$RINDEX"
	# Verify repository version
	local VERSION="$(head -1 "$RINDEX")"
	if [ "$VERSION" != "1" ]; then
		echo "Unsupported repository version: $VERSION" >&2
		return 1
	fi
	# Download subindexes
	if [ $# -gt 0 ]; then
		for CHANN in "$@"; do
			if ! grep -q "^$CHANN:" "$RINDEX"; then
				echo "Ignoring missing channel: $CHANN" >&2
				continue
			fi
			_subindex_update "$CHANN"
		done
	else
		awk -F : '/^[^:]+:/{ print $1 }' "$RINDEX" | while read CHANN; do
			_subindex_update "$CHANN"
		done
	fi
	# Remove any indexes that are not in root index
	# TODO Implement this when some channel is dropped
}

op_update() {
	local CHANNS=""
	for ARG in "$@"; do
		if [ "$ARG" = "--help" -o "$ARG" = "-h" ]; then
			echo "Usage: turris-news update [CHANNEL].."
			echo "Turris news update list of available news."
			echo "You can specify CHANNEL to update only specified channel."
			echo "If no CHANNEL is specified then all available channels are updated"
			exit 0
		fi
	done
	index_update "$@"
}

op_channels() {
	# TODO
	exit 12
}

op_list() {
	# TODO
	exit 12
}

op_read() {
	# TODO
	exit 12
}

op_cron() {
	# TODO
	exit 12
}


OP=
URL=
while [ $# -gt 0 -a -z "$OP" ]; do
	case "$1" in
		-h|--help)
			print_help
			exit 0
			;;
		--staging)
			URL="$URL_STAGING"
			;;
		--url)
			shift
			URL="$1"
			;;
		update)
			OP=op_update
			;;
		channels)
			OP=op_channels
			;;
		list)
			OP=op_list
			;;
		read)
			OP=op_read
			;;
		cron)
			OP=op_cron
			;;
		*)
			echo "Unknown argument: $1" >&2
			exit 1
			;;
	esac
	shift
done

if [ -z "$OP" ]; then
	print_help
	exit 1
fi
if [ -z "$URL" ]; then
	URL="$URL_BASE"
fi

$OP "$@"
